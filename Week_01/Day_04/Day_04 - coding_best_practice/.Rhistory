searchXKCD("code")
getXKCD(117)
install.library(XKCD)
install.library(RXKCD)
install.packages(tidyverse)
install.library(tidyverse)
library(tidyverse)
library(RXKCD)
library(RXKCD)
install.packages(RXKCD)
AmountSpent = c(9.1, 8.55, 14.32, 14.17, 14.34, 7.97, 9.79, 11.47, 12.44)
Category = c('Lunch', 'Dinner', 'Lunch', 'Lunch', 'Cinema', 'Drinks', 'Lunch', 'Lunch', 'Dinner')
my_week_of_spending = tibble(AmountSpent = AmountSpent, SpendingCategory = Category)
str(my_week_of_spending)
View(my_week_of_spending)
my_week_of_spending = tibble(Amount Spent = AmountSpent, Spending Category = Category)
my_week_of_spending = tibble(AmountSpent = AmountSpent, SpendingCategory = Category)
my_week_of_spending
summarise(my_week_of_spending, sum(AmountSpent))
summarise(filter(my_week_of_spending, SpendingCategory == 'Lunch'),sum(AmountSpent))
install.packages("styler")
install.packages("RXKCD")
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
movie_data %>%
select(homepage) %>%
group_by(homepage) %>%
summarise(count = n()) %>%
arrange(desc(count))
movie_data <- read.csv("data/movies.csv")
movie_data %>%
select(homepage) %>%
group_by(homepage) %>%
summarise(count = n()) %>%
arrange(desc(count))
# I hope I'm answering question 2 here - will need to check
movies_selected <- select(movie_data, title, runtime, budget)
view(movies_selected)
movie_selected <- select(movie_data, title, runtime, budget)
# guessing this is question 3 - again I need to check
movies_selected %>%
select(title, runtime, budget) %>%
group_by(title, runtime, budget) %>%
summarise(movie_selected, count = is.na(NA)) %>%
arrange(desc(count))
install.packages("skimr")
library(skimr)
skim(movie_data)
some_letters <- ("E", "R", "R", "O", "R)
some_letters <- ("E", "R", "R", "O", "R")
some_letters <- c("E", "R", "R", "O", "R")
# original error
# fixed version
some_letters <- c("E", "R", "R", "O", "R")
message <- c("does", "this", "work", "?")
# error 3
# original error
mtcars %>%
select(mpg, cyl, disp) %>>%
filter(mpg < 20)
mtcars %>%
select(mpg, cyl, disp) %>%
filter(mpg < 20)
# error 3
# original error
mtcars %>%
select(mpg, cyl, disp) %>>%
filter(mpg < 20)
mtcars %>%
select(mpg, cyl, disp) %>%
filter(mpg < 20)
mtcars %>%
select(mpg, cyl, disp) %>%
filter(mpg < 20)
mtcars %>%
select(mpg, cyl, disp) %>%
filter(mpg < 20)
mtcars %>%
select(mpg, cyl, disp) %>%
filter(mtcars, mpg < 20)
mtcars %>%
select(mpg, cyl, disp) %>%
filter(mpg < 20)
mtcars %>%
select(mpg, cyl, disp)
mtcars
select(mpg, cyl, disp)
mtcars %>%
dplyr::select(mpg, cyl, disp) %>%
filter(mpg < 20)
mtcars %>%
select(mpg, cyl, disp)
select(mpg, cyl, disp)
library(tidyverse)
mtcars %>%
select(mpg, cyl, disp) %>%
filter(mpg < 20)
iris %>%
select(Sepal.Width, Species) %>%
arrange(Sepal.Length)
iris
select(Sepal.Width, Species)
iris
iris %>%
select(Sepal.Width, Species) %>%
arrange(Sepal.Length)
select(Sepal.Width, Species)
iris
select(Sepal.Width, Species)
select("Sepal.Width", "Species")
select(Sepal\.Width, Species)
mutate(SepalWidth, Sepal.Width)
mutate(SepalWidth, "Sepal.Width")
?mutate
mutate(iris, SepalWidth, Sepal.Width)
library(tidyverse)
mutate(iris, SepalWidth, Sepal.Width)
mutate(SepalWidth, Sepal.Width)
mutate(SepalWidth, Sepal.Width)
library(tidyverse)
iris %>%
clean_names()
library(janitor)
iris %>%
clean_names()
library(tidyverse)
library(janitor)
iris %>%
clean_names()
select(Sepal.Width, Species) %>%
arrange(Sepal.Length)
iris %>%
clean_names() %>%
select(Sepal.Width, Species) %>%
arrange(Sepal.Length)
library(janitor)
iris %>%
clean_names() %>%
select(Sepal.Width, Species) %>%
arrange(Sepal.Length)
iris %>%
clean_names() %>%
iris %>%
clean_names() %>%
select(Sepal.Width, Species) %>%
library(janitor)
library(tidyverse)
library(janitor)
iris %>%
clean_names() %>%
select(Sepal.Width, Species) %>%
iris %>%
select(Sepal.Width, Species) %>%
arrange(Sepal.Length)
iris %>%
iris %>%
select(Sepal.Width, Species) %>%
iris %>%
select(Sepal.Width, Species) %>%
arrange(Sepal.Length)
library(tidyverse)
library(janitor)
iris %>%
clean_names() %>%
select(Sepal.Width, Species) %>%
arrange(Sepal.Length)
library(tidyverse)
library(janitor)
iris
iris %>%
clean_names() %>%
iris
iris
iris %>%
clean_names() %>%
iris
iris
library(tidyverse)
library(janitor)
iris %>%
my_iris <- clean_names(iris)
iris %>%
my_iris <- clean_names(iris)
iris %>%
select(Sepal.Width, Species) %>%
arrange(Sepal.Length)
library(janitor)
iris %>%
clean_names(iris)
library(janitor)
iris %>%
clean_names(iris)
iris %>%
clean_names() %>%
iris
iris %>%
clean_names() %>%
iris
iris
iris
ToothGrowth %>%
summarise(avg_len_vc = mean(len)) %>%
filter(supp == "VC")
ToothGrowth
iris %>%
select(Sepal.Width, Sepal.Length) %>%
arrange(Sepal.Length)
iris %>%
select(Sepal.Width, Sepal.Length, Species) %>%
arrange(Sepal.Length)
?filter
ToothGrowth %>%
summarise(avg_len_vc = mean(len)) %>%
?filter(ToothGrowth, supp == "VC")
ToothGrowth %>%
filter(ToothGrowth, supp == "VC") %>%
summarise(avg_len_vc = mean(len))
ToothGrowth
filter(supp == "VC")
ToothGrowth
ToothGrowth %>%
summarise(avg_len_vc = mean(len) %>%
filter(ToothGrowth, supp == "VC"))
ToothGrowth
ToothGrowth %>%
filter(supp == "VC")
ToothGrowth %>%
filter(supp == "VC") %>%
summarise(avg_len_vc = mean(len))
animals <- c("cat", dog, "rabbit", "horse")
animals <- c("cat", "dog", "rabbit", "horse")
sample(animals, 10)
animals <- c("cat", "dog", "rabbit", "horse")
sample(animals, 4)
animals <- c("cat", "dog", "rabbit", "horse")
sample(animals, 2)
animals2 <- c("cat", "dog", "rabbit", "horse", "llama", "elephant","mouse","cat","buffalo","duck")
sample(animals, 10)
animals2 <- c("cat", "dog", "rabbit", "horse", "llama", "elephant","mouse","cat","buffalo","duck","bird")
sample(animals, 10)
animals2 <- c("cat", "dog", "rabbit", "horse", "llama", "elephant","mouse","cat","buffalo","duck","bird")
sample(animals2, 10)
dog_names <- c("Lucy", "Molly", "Charlie", "Luna", "Bella", "Cooper")
cat_names < c("Luna", "Lily", "Lucy", "Charlie", "Max", "Oliver")
Intersect(dog_names)
Intersect(dog_names, cat_names)
library(tidyverse)
Intersect(dog_names, cat_names)
?Intersect
??Intersect
?Intersect
library(dplyr)
?Intersect
Intersect(dog_names, cat_names)
library(dplyr)
?Intersect
intersect(dog_names, cat_names)
cat_names <- c("Luna", "Lily", "Lucy", "Charlie", "Max", "Oliver")
intersect(dog_names, cat_names)
toupper(messege)
animals <- c("cat", "dog", "rabbit", "horse")
sample(animals, 10, replace = T)
?drop_na()
tibble(alphabet = LETTERS,
numbers = 1:26) %>%
filter(!alphabet %>%  c("A", "B", "C"))
conflicts()
library(tidyverse)
library(dplyr)
